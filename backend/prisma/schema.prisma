
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  password    String
  name        String?
  teams       TeamMembership[]
  tasks       Task[]    @relation("assignedTasks")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Team {
  id          String    @id @default(cuid())
  name        String
  members     TeamMembership[]
  projects    Project[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model TeamMembership {
  userId    String
  teamId    String
  role      String // "admin" or "member"
  user      User     @relation(fields: [userId], references: [id])
  team      Team     @relation(fields: [teamId], references: [id])

  @@id([userId, teamId])
}

model Project {
  id          String    @id @default(cuid())
  name        String
  description String?
  teamId      String
  team        Team      @relation(fields: [teamId], references: [id])
  tasks       Task[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Task {
  id          String      @id @default(cuid())
  title       String
  description String?
  status      String      // e.g., "todo", "in-progress", "done"
  dueDate     DateTime?
  assigneeId  String?
  assignee    User?       @relation("assignedTasks", fields: [assigneeId], references: [id])
  projectId   String
  project     Project     @relation(fields: [projectId], references: [id])
  attachments Attachment[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Attachment {
  id        String   @id @default(cuid())
  fileName  String
  url       String
  taskId    String
  task      Task     @relation(fields: [taskId], references: [id])
  createdAt DateTime @default(now())
}